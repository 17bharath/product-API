from flask import Flask, request, jsonify

app = Flask(__name__)

# Placeholder data structures for demonstration
users = []
products = []

# Registration API
@app.route('/api/register', methods=['POST'])
def register():
    data = request.json
    users.append(data)
    return jsonify({"message": "User registered successfully"})

# Login API
@app.route('/api/login', methods=['POST'])
def login():
    data = request.json
    # Simulate login validation
    for user in users:
        if user['email'] == data['email'] and user['password'] == data['password']:
            return jsonify({"message": "Login successful"})
    return jsonify({"message": "Invalid credentials"})

# Product Upload API
@app.route('/api/products/upload', methods=['POST'])
def upload_products():
    # In a real scenario, you would process the uploaded CSV file
    return jsonify({"message": "Products uploaded successfully"})

# Product Review API
@app.route('/api/products/<int:product_id>/reviews', methods=['POST'])
def add_review(product_id):
    data = request.json
    # In a real scenario, you would associate the review with the product
    return jsonify({"message": "Review added successfully"})

# Product View Pagination API
@app.route('/api/products', methods=['GET'])
def get_products():
    page = int(request.args.get('page', 1))
    page_size = int(request.args.get('pageSize', 10))
    sort_by = request.args.get('sortBy', 'review')

    # In a real scenario, you would sort and paginate the products
    # For demonstration, returning placeholder products
    paginated_products = products[(page - 1) * page_size:page * page_size]

    return jsonify({
        "products": paginated_products,
        "totalPages": len(products) // page_size + 1,
        "currentPage": page
    })

if __name__ == '__main__':
    app.run(debug=True)
